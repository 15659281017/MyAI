    上次训练完模型之后，识别的准确率只有67%，还是很低的，自己测试了几个都识别错误了。
    今天尝试了从不同方面的设置提高识别的准确度，效果有一点提升。
    
    ①卷积层
    我尝试了增加卷积池的数量和卷积核的数量。我增加了部分卷积池的数量。卷积核的数量也从32到64再到128。其中我按照ppt上将卷积核逐步增加到了512个，但是好像电脑的gpu带不动程序了，没有跑起来，所以我最后只增加到128就没有继续增加了。卷积核的尺寸一直都是3*3的大小。激活函数一直使用“relu”。
    ②池化层
    池化层的池化窗口大小我一直设置为2*2，然后Keras自动完成池化操作。
    ③全连接层
    这个层在Keras中称为被称之为Dense层，我们只需要设置输出层的维度，然后Keras就会帮助我们自动完成了。我先设置了一个Dense(128)，然后又设置了Dense(6)来实现6类垃圾的分类。
    ④Dropout
    Dropout的作用是防止CNN中过拟合现象的出现。我设置Dropout值为0.5，一般都是这样设置的。
    ⑤数据输入
    我的数据体图片大小都是512*384像素的。
    ⑥损失函数与优化器
    在构建了线性模型之后，我们使用Keras中的compile函数来指定优化器和损失函数。损失函数我们使用categorical_crossentropy，优化器我们使用rmsprop。
    ⑦训练的batch_size和epochs
    batch_size = 20 #batch_size越大精确度越低，效率越高
    epochs = 30 
    
    今天的成果是将准确率从67%提高到了74%，虽然离高准确度的识别还是有一定的距离，但是也算是有取得一些进步。明天再尝试一下其他方面对准确率的影响，如步幅、填充等。相信我们会将准确度提高到95%以上的！
